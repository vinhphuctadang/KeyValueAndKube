---
# expose mongo-router
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    name: mongo
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    role: mongo
---
# mongo router
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: mongos
spec:
  replicas: 2
  template:
    spec:
      volumes:
        - name: secrets-volume
          secret:
            secretName: shared-bootstrap-data
            defaultMode: 256 # what is this ?
      containers:
        - name: mongos-container
          image: mongo
          command:
            - "mongos"
            - "--port"
            - "27017"
            - "--bind_ip_all"
            - "--configdb"
            - "ConfigDBRepSet/mongod-configdb-0.mongodb-configdb-service.default.svc.cluster.local:27017,mongod-configdb-1.mongodb-configdb-service.default.svc.cluster.local:27017,mongod-configdb-2.mongodb-configdb-service.default.svc.cluster.local:27017" # add all configserver to each router
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: secrets-volume
              readOnly: true
              mountPath: /etc/secrets-volume
---
# mongo config server
apiVersion: apps/v1beta1
kind: Deployment
serviceName: mongodb-configdb-service
metadata:
  name: mongod-configdb
spec:
  replicas: 2
  template:
    spec:
      containers:
      - name: mongod-configdb-container
        image: mongo
        command:
          - "mongod"
          - "--port"
          - "27017"
          - "--configsvr"
          - "--replSet configserver"
# mongo shards
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo"
  replicas: 2
  template:
    metadata:
      labels:
        role: mongo
        environment: test
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo
          command:
            - mongod
            - "--port 27017"
            - "--shardsvr"
            - "--replSet shard01" # how to init another shard ?
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
        - name: mongo
          image: mongo
          command:
            - mongod
            - "--port 27017"
            - "--shardsvr"
            - "--replSet shard01"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
      annotations:
        volume.beta.kubernetes.io/storage-class: "fast"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi

# ---
# # following configuration is recommended by the mongodb page FOR Enterprise MongoDB, or MongoDB Enterprise Kubernetes perator.
# apiVersion: mongodb.com/v1
# kind: MongoDB
# metadata:
#   name: key-value-db
#   namespace: myserver # match the configmap file
# spec:
#   shardCount: 2 # 2 shards
#   mongodsPerShardCount: 2 # 2 daemon controllers / shard
#   mongosCount: 2 # mongo router count
#   configServerCount: 3
#   version: 4.0.6
#   project: key-value-configmap # Should match metadata.name in your
#                          # configmap file.
#   # credentials: <mycredentials>
#   type: ShardedCluster
#   persistent: true
#   exposedExternally: true
  # # for tls
  # security:
  #   tls:
  #     enable: true
  #   clusterAuthenticationMode: x509
  #   AdditionalMongodConfig:
  #     net:
  #       ssl:
  #         mode: requireSSL # only accept TLS connection, other mode preferSSL, allowSSL
  # # for resources:
  # ConfigSrvPodSpec:
  #   cpu:
  #   cpuRequests:
  #   memory:
  #   memoryRequests:
  #   nodeAffinity:
