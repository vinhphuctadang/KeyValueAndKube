---
# Run built node app hello-kube with 3 replica
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-router-deployment
  labels:
    app: mongo-router
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mongo-router
  template:
    metadata:
      labels:
        app: mongo-router
    spec:
      containers:
      - name: mongo-router
        image: mongo:latest # image is at remote repo
        imagePullPolicy: IfNotPresent
        command: "mongos --port 27017 --configdb deployment/configsvr:27017 --bind_ip_all"
        ports:
        - containerPort: 27017 # port 'inside' container
      restartPolicy: OnFailure

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-shard-deployment
  labels:
    app: mongo-shard
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mongo-shard
  template:
    metadata:
      labels:
        app: mongo-shard
    spec:
      containers:
      - name: mongo-shard
        image: mongo:latest
        imagePullPolicy: IfNotPresent
        command: "mongod --port 27018 --shardsvr --replSet shard01"
        ports:
        - containerPort: 27018 # port 'inside' container

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-configsvr-deployment
  labels:
    app: mongo-configsvr
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mongo-configsvr
  template:
    metadata:
      labels:
        app: mongo-configsvr
    spec:
      containers:
      - name: mongo-configsvr
        image: mongo:latest # image is at remote repo
        imagePullPolicy: IfNotPresent
        command: "mongod --port 27017 --configsvr --replSet configserver"
        ports:
        - containerPort: 27017 # port 'inside' container

---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  type: ClusterIP
  selector:
    app: mongo-router
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017
