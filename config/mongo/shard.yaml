apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-db-pvc
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-db-pv
spec:
  storageClassName: local-storage
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/my-database"
    type: DirectoryOrCreate
---
# mongo shards
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-shard0
  labels:
    name: mongo-shard0
spec:
  serviceName: "shard0-service"
  replicas: 2
  selector:
    matchLabels: # TODO: Explore more about this selector's selection behavior
      name: mongo-shard0
  template:
    metadata:
      labels:
        name: mongo-shard0
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo
          command:
            - mongod
            - "--port"
            - "27017"
            - "--shardsvr"
            - "--replSet"
            - "shard0" # how to init another shard ?
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
      volumes: # use the same 'data storage'
        - name: persistent-db-storage
          persistentVolumeClaim:
            claimName: my-db-pvc
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-shard1
  labels:
    name: mongo-shard1
spec:
  serviceName: "shard1-service"
  replicas: 2
  selector:
    matchLabels:
      name: mongo-shard1
  template:
    metadata:
      labels:
        name: mongo-shard1
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo
          command:
            - mongod
            - "--port 27017"
            - "--shardsvr"
            - "--replSet"
            - "shard1" # how to init another shard ?
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
      volumes: # use the same 'data storage'
        - name: persistent-db-storage
          persistentVolumeClaim:
            claimName: my-db-pvc
---
# shard services
# to expose mongo-router
apiVersion: v1
kind: Service
metadata:
  name: shard0-service
  labels:
    name: shard0-service
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    name: mongo-shard0
---
apiVersion: v1
kind: Service
metadata:
  name: shard1-service
  labels:
    name: shard1-service
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    name: mongo-shard1
